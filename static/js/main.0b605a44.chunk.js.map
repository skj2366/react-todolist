{"version":3,"sources":["components/TodoTemplate.js","TodoContext.js","components/TodoHead.js","components/TodoItem.js","components/TodoList.js","components/TodoCreate.js","App.js","serviceWorker.js","index.js"],"names":["TodoTemplateBlock","styled","div","TodoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","TodoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","context","useContext","useTodoDispatch","TodoHeadBlock","TodoHead","undoneTasks","today","Date","dateString","toLocaleDateString","year","month","day","dayName","weekday","className","length","CheckCircle","props","css","Text","Remove","TodoItemBlock","React","memo","onClick","TodoListBlock","TodoList","todos","key","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","useState","setOpen","setValue","useTodoNextId","onSubmit","e","preventDefault","current","placeholder","autoFocus","onChange","target","GlobalStyle","createGlobalStyle","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b605a44.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst TodoTemplateBlock = styled.div`\n    width: 512px;\n    height: 768px;\n\n    position: relative;\n    background: white;\n    border-radius: 16px;\n    box-shadow: 0 0 8px rgab(0, 0, 0, 0.04);\n\n    margin: 0 auto;\n    margin-top: 96px;\n    margin-bottom: 32px;\n\n    display: flex;\n    flex-direction: column;\n`;\n\nfunction TodoTemplate({ children }) {\n  return <TodoTemplateBlock>{children}</TodoTemplateBlock>;\n}\n\nexport default TodoTemplate;","import React, { useReducer, createContext, useContext, useRef } from 'react';\n\nconst initialTodos = [\n    {\n        id: 1,\n        text: '프로젝트 생성하기',\n        done: true\n    },\n    {\n        id: 2,\n        text: '컴포넌트 스타일링하기',\n        done: true\n    },\n    {\n        id: 3,\n        text: 'Context 만들기',\n        done: false\n    },\n    {\n        id: 4,\n        text: '기능 구현하기',\n        done: false\n    }\n];\n\n/*\n    CREATE\n    TOGGLE\n    REMOVE\n*/\nfunction todoReducer(state, action) {\n    switch (action.type) {\n        case 'CREATE':\n            return state.concat(action.todo);\n        case 'TOGGLE':\n            return state.map(\n                todo => todo.id === action.id ? { ...todo, done: !todo.done } : todo\n            );\n        case 'REMOVE':\n            return state.filter(todo => todo.id !== action.id);\n        default:\n            throw new Error(`Unhandled action type: ${action.type}`);\n    }\n}\n\nconst TodoStateContext = createContext();\nconst TodoDispatchContext = createContext();\nconst TodoNextIdContext = createContext();\n\nexport function TodoProvider({ children }) {\n    const [state, dispatch] = useReducer(todoReducer, initialTodos);\n    const nextId = useRef(5);\n\n    return (\n        <TodoStateContext.Provider value={state}>\n            <TodoDispatchContext.Provider value={dispatch}>\n                <TodoNextIdContext.Provider value={nextId}>\n                    {children}\n                </TodoNextIdContext.Provider>\n            </TodoDispatchContext.Provider>\n        </TodoStateContext.Provider>\n    );\n}\n\nexport function useTodoState() {\n    const context = useContext(TodoStateContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useTodoDispatch() {\n    const context = useContext(TodoDispatchContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}\n\nexport function useTodoNextId() {\n    const context =  useContext(TodoNextIdContext);\n    if(!context) {\n        throw new Error('Cannot find TodoProvider');\n    }\n    return context;\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoHeadBlock = styled.div`\n    padding-top: 48px;\n    padding-left: 32px;\n    padding-right: 32px;\n    padding-bottom: 24px;\n    /* border-bottom: 1px solid #e9ecef; */\n    border-bottom: 1px solid #e9ecef;\n\n    h1 {\n        margin: 0;\n        font-size: 36px;\n        color: #343a40;\n    }\n\n    .day {\n        margin-top: 4px;\n        color: #868e96;\n        font-size: 21px;\n    }\n\n    .task-left {\n        color: #20c997;\n        font-size: 18px;\n        margin-top: 40px;\n        font-weight: bold;\n    }\n`;\n\nfunction TodoHead() {\n    const todos = useTodoState();\n    const undoneTasks = todos.filter(todo => !todo.done);\n\n    const today = new Date();\n    const dateString = today.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n    });\n    const dayName = today.toLocaleDateString('ko-KR', {\n        weekday: 'long'\n    });\n\n    return (\n        <TodoHeadBlock>\n            <h1>{dateString}</h1>\n            <div className=\"day\">{dayName}</div>\n            <div className=\"task-left\">할 일 {undoneTasks.length}개 남음</div>\n        </TodoHeadBlock>\n    );\n}\n\nexport default TodoHead;","import React from \"react\";\nimport styled, { css } from \"styled-components\";\nimport { MdDelete, MdDone } from \"react-icons/md\";\nimport { useTodoDispatch } from \"../TodoContext\";\n\nconst CheckCircle = styled.div`\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: 1px solid #ced4da;\n  font-size: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 20px;\n  cursor: pointer;\n  ${(props) =>\n    props.done &&\n    css`\n      border: 1px solid #38d9a9;\n      color: #e38d9a9;\n    `}\n`;\nconst Text = styled.div`\n  flex: 1;\n  font-size: 21px;\n  color: #495057;\n  ${(props) =>\n    props.done &&\n    css`\n      color: #ced4da;\n    `}\n`;\nconst Remove = styled.div`\n  opacity: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #dee2e6;\n  font-size: 24px;\n  cursor: pointer;\n  &:hover {\n    color: #ff6b6b;\n  }\n`;\n\nconst TodoItemBlock = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 12px;\n  padding-bottom: 12px;\n\n  &:hover {\n    ${Remove} {\n      opacity: 1;\n    }\n  }\n`;\n\nfunction TodoItem({ id, done, text }) {\n  const dispatch = useTodoDispatch();\n  const onToggle = () =>\n    dispatch({\n      type: \"TOGGLE\",\n      id,\n    });\n  const onRemove = () =>\n    dispatch({\n      type: \"REMOVE\",\n      id,\n    });\n  return (\n    <TodoItemBlock>\n      <CheckCircle done={done} onClick={onToggle}>\n        {done && <MdDone />}\n      </CheckCircle>\n      <Text done={done}>{text}</Text>\n      <Remove onClick={onRemove}>\n        <MdDelete />\n      </Remove>\n    </TodoItemBlock>\n  );\n}\n\nexport default React.memo(TodoItem);\n","import React from 'react';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\nimport { useTodoState } from '../TodoContext';\n\nconst TodoListBlock = styled.div`\n    flex: 1;\n    padding: 20px 20px;\n    padding-bottom: 48px;\n    overflow-y: auto;\n`;\n\nfunction TodoList() {\n    const todos = useTodoState();\n\n    return (\n        <TodoListBlock>\n            {todos.map(todo =>\n                <TodoItem\n                    key={todo.id}\n                    id={todo.id}\n                    text={todo.text}\n                    done={todo.done}\n                />\n            )}\n        </TodoListBlock>\n    )\n}\n\nexport default TodoList;","import React, { useState } from 'react';\nimport styled, { css } from 'styled-components';\nimport { MdAdd } from 'react-icons/md';\nimport { useTodoDispatch, useTodoNextId } from '../TodoContext';\n\nconst CircleButton = styled.button`\n  background: #38d9a9;\n  &:hover {\n    background: #63e6be;\n  }\n  &:active {\n    background: #20c997;\n  }\n\n  z-index: 5;\n  cursor: pointer;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: absolute;\n  left: 50%;\n  bottom: 0px;\n  transform: translate(-50%, 50%);\n\n  font-size: 60px;\n  color: white;\n  border-radius: 40px;\n\n  border: none;\n  outline: none;\n\n  transition: 0.125s all ease-in;\n  ${(props) =>\n    props.open &&\n    css`\n      background: #ff6b6b;\n      &:hover {\n        background: #ff8787;\n      }\n      &:active {\n        background: #fa5252;\n      }\n      transform: translate(-50%, 50%) rotate(45deg);\n    `}\n`;\n\nconst InsertFormPositioner = styled.div`\n  width: 100%;\n  bottom: 0;\n  left: 0;\n  position: absolute;\n`;\n\nconst InsertForm = styled.form`\n  background: #f8f9fa;\n  padding: 32px;\n  padding-bottom: 72px;\n  border-bottom-left-radius: 16px;\n  border-bottom-right-radius: 16px;\n  border-top: 1px solid #e9ecef;\n`;\n\nconst Input = styled.input`\n  padding: 12px;\n  border-radius: 4px;\n  border: 1px solid #dee2e6;\n  width: 100%;\n  outline: none;\n  font-size: 18px;\n  box-sizing: border-box;\n`;\n\nfunction TodoCreate() {\n  const [open, setOpen] = useState(false);\n  const [value, setValue] = useState('');\n  const dispatch = useTodoDispatch();\n  const nextId = useTodoNextId();\n\n  const onToggle = () => setOpen(!open);\n  const onChange = (e) => setValue(e.target.value);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    dispatch({\n      type: 'CREATE',\n      todo: {\n        id: nextId.current,\n        text: value,\n        done: false,\n      },\n    });\n    setValue('');\n    setOpen(false);\n    nextId.current += 1;\n  };\n\n  return (\n    <>\n      {open && (\n        <InsertFormPositioner>\n          <InsertForm onSubmit={onSubmit}>\n            <Input\n              placeholder='할 일을 입력 후, Enter를 눌러주세요'\n              autoFocus\n              onChange={onChange}\n              value={value}\n            />\n          </InsertForm>\n        </InsertFormPositioner>\n      )}\n      <CircleButton onClick={onToggle} open={open}>\n        <MdAdd />\n      </CircleButton>\n    </>\n  );\n}\n\nexport default React.memo(TodoCreate);\n","import React from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\nimport TodoTemplate from \"./components/TodoTemplate\";\nimport TodoHead from \"./components/TodoHead\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport { TodoProvider } from \"./TodoContext\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <GlobalStyle />\n      <TodoTemplate>\n        <TodoHead />\n        <TodoList />\n        <TodoCreate />\n      </TodoTemplate>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}